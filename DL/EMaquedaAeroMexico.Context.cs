//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EMaquedaAeroMexicoEntities : DbContext
    {
        public EMaquedaAeroMexicoEntities()
            : base("name=EMaquedaAeroMexicoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Destino> Destinoes { get; set; }
        public virtual DbSet<Origen> Origens { get; set; }
        public virtual DbSet<Pasajero> Pasajeroes { get; set; }
        public virtual DbSet<PasajeroVuelo> PasajeroVueloes { get; set; }
        public virtual DbSet<Vuelo> Vueloes { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual ObjectResult<UsuarioLogin_Result> UsuarioLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioLogin_Result>("UsuarioLogin", usernameParameter, passwordParameter);
        }
    
        public virtual int PasajeroAdd(string nombre, string apellidos)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PasajeroAdd", nombreParameter, apellidosParameter);
        }
    
        public virtual ObjectResult<VueloGetByDate_Result> VueloGetByDate(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VueloGetByDate_Result>("VueloGetByDate", fecha1Parameter, fecha2Parameter);
        }
    
        public virtual int Reservacion(Nullable<int> idVuelo, Nullable<int> idPasajero)
        {
            var idVueloParameter = idVuelo.HasValue ?
                new ObjectParameter("idVuelo", idVuelo) :
                new ObjectParameter("idVuelo", typeof(int));
    
            var idPasajeroParameter = idPasajero.HasValue ?
                new ObjectParameter("idPasajero", idPasajero) :
                new ObjectParameter("idPasajero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reservacion", idVueloParameter, idPasajeroParameter);
        }
    }
}
